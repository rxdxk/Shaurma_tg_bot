from config import bot,my_dict,db,types
from keyboards import *
from send_photo_func import send_photo

@bot.message_handler() #–û—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä
def kb_answer(message):
   
   def get_user_adress(message): #–ê–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
       msg = bot.send_message(message.chat.id,'–ù–∞–ø–∏—à—ñ—Ç—å –≤–∞—à—É –∞–¥—Ä–µ—Å—Éüè†')
       bot.register_next_step_handler(msg,get_user_adress_next_step)

   def get_user_adress_next_step(message): #–ê–¥—Ä–µ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è2
       global user_adres
       user_adress = message.text
       bot.send_message(message.chat.id,"–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–∏–π–Ω—è—Ç–æ‚úÖ")
       my_dict.clear()
       db.create_order(user_data, str(basket), user_num, user_adress)

   def check_user_num(message):   #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ 1
       msg = bot.send_message(message.chat.id,'–ù–∞–ø–∏—à—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –ø–æ—á–Ω–∞—é—á–∏ –∑ 0üìû',reply_markup=types.ReplyKeyboardRemove())
       bot.register_next_step_handler(msg,check_user_num_next_step)

   def check_user_num_next_step(message): #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ 2
        global user_num
        user_num = message.text
        if len(user_num) == 10 and user_num[0] == '0':
            bot.send_message(message.chat.id,f'–í–∞—à –Ω–æ–º–µ—Ä {user_num}')
            get_user_data(message)
        elif len(user_num) != 10 or user_num[0] != '0':
            bot.send_message(message.chat.id,'–ù–æ–º–µ—Ä –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–≤—ñ—Ä–Ω–æüôÖ‚Äç‚ôÇÔ∏è')
            check_user_num(message)

   def get_user_data(message): #–ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é 1
       msg = bot.send_message(message.chat.id,"–í–≤–µ–¥—ñ—Ç—å –≤–∞—à–µ —ñ–º'—è —Ç–∞ –ø—Ä–∏–∑–≤–∏—â–µüìù")
       bot.register_next_step_handler(msg,get_user_data_next_step)

   def get_user_data_next_step(message):#–ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é 1
       global user_data
       user_data = message.text
       bot.send_message(message.chat.id,f"–í–∞—à–µ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:{user_data}")
       get_user_adress(message)

   def acception_key_func(acception_buttons): #–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ –æ—Ç —á–µ–≥–æ-—Ç–æ –≤ –∑–∞–∫–∞–∑–µ
    for x in basket:
      acception_buttons.append(types.KeyboardButton(x))

   def user_order_acception(message): #–ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –¥–∞/–Ω–µ—Ç 1
       msg = bot.send_message(message.chat.id,f"–í—Å–µ –≤—ñ—Ä–Ω–æ ?",reply_markup=yes_or_no_kb)
       show_basket()
       bot.register_next_step_handler(msg,user_order_acception_next_step)

   def user_order_acception_next_step(message): #–ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –¥–∞/–Ω–µ—Ç 1
       user_response = message.text
       if user_response == '–¢–∞–∫' and basket != []:
           bot.send_message(message.chat.id,"–°—É–ø–µ—Ä!")
           check_user_num(message)
       elif user_response =='–¢–∞–∫' and basket ==[]:
           bot.send_message(message.chat.id,"–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ (",reply_markup=main_menu_kb)
       elif user_response == "–ù—ñ" and basket != []:
           acception_buttons = []
           acception_key_func(acception_buttons)
           acception_kb = types.ReplyKeyboardMarkup(resize_keyboard=True).add(*acception_buttons)
           msg = bot.send_message(message.chat.id,"–©–æ –≤–∏ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ ?",reply_markup=acception_kb)
           bot.register_next_step_handler(msg,user_order_acception_forward)
       elif user_response == "–ù—ñ" and basket == []:
           bot.send_message(message.chat.id,"–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ (",reply_markup=main_menu_kb)

   def check_basket(message):
       if basket == []:
           bot.send_message(message.chat.id,"–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ (",reply_markup=main_menu_kb)


   def user_order_acception_forward(message): #–ü—Ä–∏–Ω—è—Ç–∏–µ –∑–∞–∫–∞–∑–∞ –¥–∞/–Ω–µ—Ç + –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 
    if basket != []:
       user_acception = message.text
       basket.remove(message.text)
       user_order_acception(message)
    else:
        bot.send_message(message.chat.id,"–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞ (",reply_markup=main_menu_kb)

   def basket_append(message):
     user_id = message.from_user.id
     my_dict[user_id].append(message.text)
     bot.reply_to(message, f"–¢–æ–≤–∞—Ä {message.text} –¥–æ–¥–∞–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É‚úÖ")
     print(my_dict)

   def show_basket():#–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É 
       global basket
       user_id = message.from_user.id
       basket = my_dict[user_id]
       basket_str = (', ').join(basket)
       bot.reply_to(message, f"–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞: {basket_str}")
       check_basket(message)

   if message.text == '–ú–µ–Ω—é':  #–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ú–µ–Ω—é
       bot.send_message(message.chat.id,"–û—Å—å –Ωa—à–µ –º–µ–Ω—é:")
       send_photo('menu.jpg',message)
   elif message.text == '–ù–∞–∑–∞–¥': #–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ù–∞–∑–∞–¥
           bot.send_message(message.chat.id,"–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –Ω–∞–∑–∞–¥",reply_markup=main_menu_kb)
   elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω—è" and basket != []: #–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ó–∞–≤–µ—Ä—à–∏—Ç—å –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –Ω–µ –ø—É—Å—Ç–∞—è
       show_basket()
       user_order_acception(message)
   elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω—è" and basket == []: #–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –ó–∞–≤–µ—Ä—à–∏—Ç—å –µ—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞—è
       bot.send_message(message.chat.id, "–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—É—Å—Ç–µü§∑‚Äç‚ôÇÔ∏è")
       print(basket)
   elif message.text == '–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è': #–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏ –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
       bot.send_message(message.chat.id,"–û—Å—å –Ω–∞—à—ñ –ø–æ–∑–∏—Ü—ñ—ó,—â–æ–± –≤–∏–±—Ä–∞—Ç–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É",reply_markup=order_kb)   
    #–ü—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é —Å–ª–æ–≤–∞ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–∫–∞–∑ –¥–∞–±—ã –æ–Ω–æ –Ω–µ –ø–æ–ø–∞–¥–∞–ª–æ –≤ –∫–æ—Ä–∑–∏–Ω—É –∫–∞–∫ –µ–ª–µ–º–µ–Ω—Ç
   elif message.text  in shaurma_posititons[0:7]:
      basket_append(message)
      show_basket()
   elif message.text  in falafel_positions[0:2]:
       basket_append(message)
       show_basket()
   elif message.text  in rols_positions[0:5]:
       basket_append(message)
       show_basket()
   elif message.text  in drinks_positions[0:3]:
       basket_append(message)
       show_basket()
   elif message.text  in dodatki_positions[0:6]:
      basket_append(message)
      show_basket()
   elif message.text in garniers_positions[0:3]:
        basket_append(message)
        show_basket()
   else:
       bot.send_message(message.chat.id,"–Ø –≤–∞—Å –Ω–µ —Ä–æ–∑—É–º—ñ—é(")
